apply plugin: 'groovy'
apply plugin: 'maven'

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
    classpath "com.gradle.publish:plugin-publish-plugin:${publishPluginVersion}"
  }
}

apply plugin: "com.gradle.plugin-publish"

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: awsSdkS3Version
    compile group: 'com.amazonaws', name: 'aws-java-sdk-sts', version: awsSdkSTSVersion
}

repositories {
    jcenter()
}

if (System.env.TRAVIS == 'true') {
    def branch = System.env.TRAVIS_BRANCH.replace('/', '-')
    def isPullRequestBuild = System.env.TRAVIS_PULL_REQUEST != 'false'

    if (branch != 'master' || isPullRequestBuild) {
        version += "-${branch}-${System.env.TRAVIS_BUILD_NUMBER}"
    }
}

task versionFile {
    doLast {
        def f = file("${buildDir}/VERSION")
        f.parentFile.mkdirs()
        f.text = project.version
    }
}

jar.dependsOn versionFile

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: uri('build/repo'))
        }
    }
}

pluginBundle {
  website = 'https://github.com/mgk/s3-plugin/blob/master/README.md'
  vcsUrl = 'https://github.com/mgk/s3-plugin'

  description = 'S3 upload and download plugin'

  plugins {
    s3Plugin {
      id = 'com.github.mgk.gradle.s3'
      displayName = 'Gradle S3 plugin'
      tags = ['aws', 's3']
    }
  }
}

task wrapper(type: Wrapper) {
    gradleVersion = project.gradleVersion
}

task checkExample(type: GradleBuild, dependsOn: uploadArchives) {
    dir = 'example'
    tasks = ['check']
}
check.dependsOn checkExample
